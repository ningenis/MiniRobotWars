/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tubes2;

/**
 *
 * @author 42K4
 */
public class RobopediaMenu extends javax.swing.JFrame {

    /**
     * Creates new form RobopediaMenu
     */
    Player CurrentPlayer = new Player("ikp");
    String desript;
    public RobopediaMenu() {
        initComponents();
        Allinvis();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JLabel();
        minirobot = new javax.swing.JLabel();
        giantrobot = new javax.swing.JLabel();
        MiniGDg = new javax.swing.JLabel();
        MiniAH = new javax.swing.JLabel();
        test = new javax.swing.JLabel();
        MiniGE = new javax.swing.JLabel();
        MiniAV = new javax.swing.JLabel();
        MiniGDf = new javax.swing.JLabel();
        MiniADf = new javax.swing.JLabel();
        MiniGH = new javax.swing.JLabel();
        GiantB = new javax.swing.JLabel();
        GiantA = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        Desription = new javax.swing.JTextArea();
        GiantG = new javax.swing.JLabel();
        robopediaMenu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(null);

        back.setText("jLabel2");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(240, 500, 410, 30);

        minirobot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minirobotMouseClicked(evt);
            }
        });
        getContentPane().add(minirobot);
        minirobot.setBounds(160, 140, 160, 50);

        giantrobot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                giantrobotMouseClicked(evt);
            }
        });
        getContentPane().add(giantrobot);
        giantrobot.setBounds(540, 144, 160, 30);

        MiniGDg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniDgUp.png"))); // NOI18N
        MiniGDg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniGDgMouseClicked(evt);
            }
        });
        getContentPane().add(MiniGDg);
        MiniGDg.setBounds(640, 200, 90, 80);

        MiniAH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniUdara.png"))); // NOI18N
        MiniAH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniAHMouseClicked(evt);
            }
        });
        getContentPane().add(MiniAH);
        MiniAH.setBounds(380, 200, 90, 80);
        getContentPane().add(test);
        test.setBounds(470, 50, 70, 50);

        MiniGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniEnergi.png"))); // NOI18N
        MiniGE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniGEMouseClicked(evt);
            }
        });
        getContentPane().add(MiniGE);
        MiniGE.setBounds(130, 200, 90, 80);

        MiniAV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniVertikal.png"))); // NOI18N
        MiniAV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniAVMouseClicked(evt);
            }
        });
        getContentPane().add(MiniAV);
        MiniAV.setBounds(460, 200, 90, 80);

        MiniGDf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniDef.png"))); // NOI18N
        MiniGDf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniGDfMouseClicked(evt);
            }
        });
        getContentPane().add(MiniGDf);
        MiniGDf.setBounds(300, 200, 90, 80);

        MiniADf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniAirDef.png"))); // NOI18N
        MiniADf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniADfMouseClicked(evt);
            }
        });
        getContentPane().add(MiniADf);
        MiniADf.setBounds(550, 200, 90, 80);

        MiniGH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/MiniDarat.png"))); // NOI18N
        MiniGH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiniGHMouseClicked(evt);
            }
        });
        getContentPane().add(MiniGH);
        MiniGH.setBounds(220, 200, 90, 80);

        GiantB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bot1move.png"))); // NOI18N
        GiantB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GiantBMouseClicked(evt);
            }
        });
        getContentPane().add(GiantB);
        GiantB.setBounds(610, 200, 160, 160);

        GiantA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bot2move.png"))); // NOI18N
        GiantA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GiantAMouseClicked(evt);
            }
        });
        getContentPane().add(GiantA);
        GiantA.setBounds(220, 200, 100, 90);

        Desription.setColumns(20);
        Desription.setRows(5);
        ScrollPane.setViewportView(Desription);

        getContentPane().add(ScrollPane);
        ScrollPane.setBounds(140, 380, 630, 80);

        GiantG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bot3move.png"))); // NOI18N
        GiantG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GiantGMouseClicked(evt);
            }
        });
        getContentPane().add(GiantG);
        GiantG.setBounds(130, 200, 100, 90);

        robopediaMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/robopediamenu.png"))); // NOI18N
        getContentPane().add(robopediaMenu);
        robopediaMenu.setBounds(0, 4, 900, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        this.dispose();
        MainMenu mm = new MainMenu();
        mm.setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    private void minirobotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minirobotMouseClicked
        // TODO add your handling code here:
        Allinvis();
        switch(this.CurrentPlayer.getLevel()){
            case 1 :
                MiniGDf.setVisible(true);
                MiniGH.setVisible(true);
                MiniGE.setVisible(true);
                break;
            case 2 :
                MiniGDf.setVisible(true);
                MiniGH.setVisible(true);
                MiniGE.setVisible(true);
                
                MiniGDg.setVisible(true);
                
                break;
            case 3 : 
                MiniGDf.setVisible(true);
                MiniGH.setVisible(true);
                MiniGE.setVisible(true);
                
                MiniGDg.setVisible(true);
                
                MiniADf.setVisible(true);
                
                break;
            case 4 :
                MiniGDf.setVisible(true);
                MiniGH.setVisible(true);
                MiniGE.setVisible(true);
                
                MiniGDg.setVisible(true);
                
                MiniADf.setVisible(true);

                MiniAH.setVisible(true);
                
                break;
            case 5 :
                MiniGDf.setVisible(true);
                MiniGH.setVisible(true);
                MiniGE.setVisible(true);
                
                MiniGDg.setVisible(true);
                
                MiniADf.setVisible(true);

                MiniAH.setVisible(true);
                
                MiniAV.setVisible(true);
                
                break;
//        for(int i=0;i<this.CurrentPlayer.getListrobot().size();i++){
//            
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniGE")){
//                MiniGE.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniGH")){
//                MiniGH.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniGDf")){
//                MiniGDf.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniADf")){
//                MiniADf.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniAH")){
//                MiniAH.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniAV")){
//                MiniAV.setVisible(true);
//            }
//            else 
//            if(this.CurrentPlayer.getListrobot().get(i).getClass().toString().equals("MiniADF")){
//                MiniADf.setVisible(true);
//            }
        }
      
    }//GEN-LAST:event_minirobotMouseClicked

    private void giantrobotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_giantrobotMouseClicked
   Allinvis();
   GiantA.setVisible(true);
   GiantG.setVisible(true);
   if(this.CurrentPlayer.getLevel()==4){
       GiantB.setVisible(true);
   }
    }//GEN-LAST:event_giantrobotMouseClicked

    private void MiniGEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniGEMouseClicked
        // TODO add your handling code here:
        desript = "Mini robot who give you energy \n atk =0 \n life = 50";
        Desription.setText(desript);
        
        
    }//GEN-LAST:event_MiniGEMouseClicked

    private void MiniAHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniAHMouseClicked
        desript = "This air mini robot will shoot giant robot with a horizontal bullet \n atk =0 \n life = 50";
        Desription.setText(desript);
    }//GEN-LAST:event_MiniAHMouseClicked

    private void MiniAVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniAVMouseClicked
        desript = "This air mini robot will shoot giant robot with a vertikal bullet \n atk =0 \n life = 50";
        Desription.setText(desript);
    }//GEN-LAST:event_MiniAVMouseClicked

    private void MiniGHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniGHMouseClicked
       desript = "This ground mini robot will shoot giant robot with a horizontal bullet \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_MiniGHMouseClicked

    private void MiniADfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniADfMouseClicked
       desript = "This air mini robot can protect another minirobot from giantrobot  \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_MiniADfMouseClicked

    private void MiniGDfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniGDfMouseClicked
       desript = "This ground mini robot can protect another minirobot from giantrobot \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_MiniGDfMouseClicked

    private void MiniGDgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiniGDgMouseClicked
       desript = "This ground mini robot will shoot giant robot with a diagonal bullet \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_MiniGDgMouseClicked

    private void GiantBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GiantBMouseClicked
       desript = "This giant robot can fly on the air or walk on the ground \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_GiantBMouseClicked

    private void GiantGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GiantGMouseClicked
       desript = "This giant robot will walk on the ground and attack minirobot in front of it\n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_GiantGMouseClicked

    private void GiantAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GiantAMouseClicked
       desript = "This giant robot will fly on the air and attack minirobot in front of it \n atk =0 \n life = 50";
       Desription.setText(desript);
    }//GEN-LAST:event_GiantAMouseClicked
   
    
    public void Allinvis(){
        GiantA.setVisible(false);
        GiantB.setVisible(false);
        GiantG.setVisible(false);
        MiniADf.setVisible(false);
        MiniAH.setVisible(false);
        MiniGDf.setVisible(false);
        MiniAV.setVisible(false);
        MiniGH.setVisible(false);
        MiniGDg.setVisible(false);
        MiniGE.setVisible(false);
        
    }
      public void Allvis(){
        GiantA.setVisible(true);
        GiantB.setVisible(true);
        GiantG.setVisible(true);
        MiniADf.setVisible(true);
        MiniAH.setVisible(true);
        MiniGDf.setVisible(true);
        MiniAV.setVisible(true);
        MiniGH.setVisible(true);
        MiniGDg.setVisible(true);
        MiniGE.setVisible(true);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RobopediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RobopediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RobopediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RobopediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RobopediaMenu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Desription;
    private javax.swing.JLabel GiantA;
    private javax.swing.JLabel GiantB;
    private javax.swing.JLabel GiantG;
    private javax.swing.JLabel MiniADf;
    private javax.swing.JLabel MiniAH;
    private javax.swing.JLabel MiniAV;
    private javax.swing.JLabel MiniGDf;
    private javax.swing.JLabel MiniGDg;
    private javax.swing.JLabel MiniGE;
    private javax.swing.JLabel MiniGH;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JLabel back;
    private javax.swing.JLabel giantrobot;
    private javax.swing.JLabel minirobot;
    private javax.swing.JLabel robopediaMenu;
    private javax.swing.JLabel test;
    // End of variables declaration//GEN-END:variables
}
